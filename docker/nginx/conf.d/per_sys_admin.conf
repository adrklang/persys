#开启gzip
gzip off;

#启用gzip压缩的最小文件，小于设置值的文件将不会压缩
gzip_min_length 1k;

#gzip 压缩级别，1-9，数字越大压缩的越好，也越占用CPU时间，后面会有详细说明
gzip_comp_level 1;


# 进行压缩的文件类型。javascript有多种形式。其中的值可以在 mime.types 文件中找到。
gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png application/vnd.ms-fontobject font/ttf font/opentype font/x-woff image/svg+xml;

#是否在http header中添加Vary: Accept-Encoding，建议开启
gzip_vary on;

#禁用ie6 gzip
gzip_disable "MSIE [1-6]\.";

#设置压缩所需要的缓冲区大小
gzip_buffers 32 4k;

# 设置gzip压缩针对的HTTP协议版本
gzip_http_version 1.1;

#配置负载均衡，使用轮询算法
#fail_timeout 请求时间  单位时间内请求失败次数达max_fails，则标记服务不可用
#max_fails
#weight 权重
upstream per_cluster_server{
    server per_sys fail_timeout=20s max_fails=5 weight=2;
#    server per_sys1 fail_timeout=20s max_fails=5 weight=1;
    #ip hash算法
    #ip_hash;

    #url hash
    #hash $request_uri;

    #最小连接数
    #least_conn；

    #根据后台响应时间来分发请求，响应时间短的分发的请求多。
    #fail;
}

server {
    listen       443 ssl http2 default_server;
    listen       [::]:443 ssl http2 default_server;
    server_name  admin.lhstack.xyz;
    ssl on;
    ssl_certificate   /nginx/configuration/3135532_admin.lhstack.xyz.pem;
    ssl_certificate_key  /nginx/configuration/3135532_admin.lhstack.xyz.key;
    ssl_session_timeout 5m;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header HTTP_X_FORWARDED_FOR $remote_addr;
    proxy_set_header X-Forwarded-Server $host;
    proxy_set_header X-Forwarded-Host $host;
    location / {
        proxy_pass http://per_cluster_server;
        expires 7d;
    }
}

server {

    listen      80;
    server_name admin.lhstack.xyz;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header HTTP_X_FORWARDED_FOR $remote_addr;
    proxy_set_header X-Forwarded-Server $host;
    proxy_set_header X-Forwarded-Host $host;

    location / {
        rewrite (.*) https://admin.lhstack.xyz/$request_uri permanent;
    }
    location /actuator {
       return 200 "client real ip as $remote_addr\n";
    }

}
